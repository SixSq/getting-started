[
    {basicAuth, []},

    % HNSciCloud RHEA Federated Identity Provider based on Keycloak.
    {rhea, [
            % Standard config
            {auth_module, auth_keycloak},
            {app_id, <<"HN_FEDID_CLIENT_ID">>},
            {app_secret, <<"HN_FEDID_CLIENT_SECRET">>},
            % Provider specific config
            {xrds_endpoint, <<"HN_FEDID_OID_CONF_URL">>},
            {group_mapping, [
                    {enabled, true},
                    % All groups from this IdP will belong to the below VO group.
                    {vo_group_id, <<"HNSciCloud-RHEA">>},
                    % attributes_to_map - which attributes sent by IdP should be mapped
                    % to groups (each attribute value is expected to hold a list of strings).
                    % Config format: list of tuples {A, B, C}:
                    %   A -> attribute key
                    %   B -> derived group type (role | team | unit | organization)
                    %   C -> expected group structure, one of:
                    %     * flat -> all groups will be a direct child of the VO group,
                    %       names of groups will be the same as in the attribute.
                    %     * {nested, SplitWith} -> each group membership will be split
                    %       into a hierarchical structure using the specified split pattern.
                    %       E.g. for string <<"a/b/c">> and SplitWith = <<"/">>, three
                    %       nested groups will be created, with user belonging to the
                    %       last one: VO <- a <- b <- c <- user.
                    {attributes_to_map, [
                        {<<"groups">>, team, {nested, <<"/">>}},
                        {<<"roles">>, role, flat},
                        {<<"entitlement">>, role, flat}
                    ]},
		    % Optional field
		    {super_group, <<"vo:HNSciCloud-RHEA/rl:data-manager">>}
                ]}
        ]}
].
